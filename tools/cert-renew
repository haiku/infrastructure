#!/bin/bash

# Automation: Runs once a week
#
# Renews certificates by bringing consumers of 443 down,
# opening firewall ports, and using certbot standalone.
#
# TODO: Test each certificate for validity? If no certs
# expire soon, don't bring down router container?

DOMAINS="review.haiku-os.org cgit.haiku-os.org dev.haiku-os.org git.haiku-os.org haiku-os.org api.haiku-os.org userguide.haiku-os.org ports-mirror.haiku-os.org dev.haiku-os.org"
LOG="/var/log/letsencrypt.log"
CONTEXT="/root/infrastructure"

date >> $LOG
echo "Bringing down services..." >> $LOG

# Bring down the docker nginx http/https router (which consumes 443)
docker-compose -f $CONTEXT/docker-compose.yaml stop router >> $LOG 2>&1
sleep 5
# Open 443 for certbot
echo "Opening 443 for certbot..." >> $LOG
iptables -I INPUT 1 -p tcp -m state --dport 443 --state NEW -m tcp -j ACCEPT >> $LOG 2>&1
ip6tables -I INPUT 1 -p tcp -m state --dport 443 --state NEW -m tcp -j ACCEPT >> $LOG 2>&1
for i in $DOMAINS; do
	ACTION="certonly"
	if [ -d "/etc/letsencrypt/live/$i" ]; then
		ACTION="renew"
	fi
	COMMAND="certbot $ACTION --standalone -n -d $i"
	echo "Running '$COMMAND'" >> $LOG
	$COMMAND >> $LOG 2>&1
done
sleep 5
# Close 443 to return to docker
echo "Securing 443..." >> $LOG
iptables -D INPUT -p tcp -m state --dport 443 --state NEW -m tcp -j ACCEPT >> $LOG 2>&1
ip6tables -D INPUT -p tcp -m state --dport 443 --state NEW -m tcp -j ACCEPT >> $LOG 2>&1

# Bring docker nginx http/https router back online
echo "Restoring services..." >> $LOG
docker-compose -f $CONTEXT/docker-compose.yaml start router >> $LOG 2>&1
